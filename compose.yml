services:
  llm-member:
    image: llm-member:latest
    ports:
      - "8080:8080"
    environment:
      - APP_PORT=8080
      - APP_MODE=test
      - APP_NAME=Swiflow
      - APP_DESC=LLM会员管理系统
      - DATA_PATH=/app/storage
      # 数据库配置
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASS=123456
      - MYSQL_NAME=demo
      # Redis配置
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=123456
      - REDIS_DB=0
      # - APP_MODE=release # release
      # 管理员配置（请修改默认密码）
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123
      # API配置（请填入实际的API密钥）
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your_openai_api_key_here}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://api.openai.com/v1}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY:-your_claude_api_key_here}
      - CLAUDE_BASE_URL=${CLAUDE_BASE_URL:-https://api.anthropic.com/v1}
    volumes:
      # 持久化存储数据库和日志
      - llm_storage:/app/storage
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - llm-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    environment:
      # - MYSQL_USER=root
      - MYSQL_DATABASE=demo
      - MYSQL_PASSWORD=123456
      - MYSQL_ROOT_PASSWORD=123456
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    restart: unless-stopped
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=256M
      --max-connections=200
    networks:
      - llm-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  redis:
    image: redis:latest
    command: redis-server --requirepass 123456
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - llm-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "123456", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  llm_storage:
    driver: local
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  llm-network:
    driver: bridge